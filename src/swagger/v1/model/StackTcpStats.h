/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * StackTcpStats.h
 *
 * Stack TCP statistics
 */

#ifndef StackTcpStats_H_
#define StackTcpStats_H_


#include "ModelBase.h"


namespace swagger {
namespace v1 {
namespace model {

/// <summary>
/// Stack TCP statistics
/// </summary>
class  StackTcpStats
    : public ModelBase
{
public:
    StackTcpStats();
    virtual ~StackTcpStats();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// StackTcpStats members

    /// <summary>
    /// Transmitted packets
    /// </summary>
    int64_t getTxPackets() const;
    void setTxPackets(int64_t value);
        /// <summary>
    /// Received packets
    /// </summary>
    int64_t getRxPackets() const;
    void setRxPackets(int64_t value);
        /// <summary>
    /// Forwarded packets
    /// </summary>
    int64_t getForwardedPackets() const;
    void setForwardedPackets(int64_t value);
        /// <summary>
    /// Dropped packets
    /// </summary>
    int64_t getDroppedPackets() const;
    void setDroppedPackets(int64_t value);
        /// <summary>
    /// Checksum errors
    /// </summary>
    int64_t getChecksumErrors() const;
    void setChecksumErrors(int64_t value);
        /// <summary>
    /// Invalid length errors
    /// </summary>
    int64_t getLengthErrors() const;
    void setLengthErrors(int64_t value);
        /// <summary>
    /// Out of memory errors
    /// </summary>
    int64_t getMemoryErrors() const;
    void setMemoryErrors(int64_t value);
        /// <summary>
    /// Routing errors
    /// </summary>
    int64_t getRoutingErrors() const;
    void setRoutingErrors(int64_t value);
        /// <summary>
    /// Protocol error
    /// </summary>
    int64_t getProtocolErrors() const;
    void setProtocolErrors(int64_t value);
        /// <summary>
    /// Errors in options
    /// </summary>
    int64_t getOptionErrors() const;
    void setOptionErrors(int64_t value);
        /// <summary>
    /// Miscellaneous errors
    /// </summary>
    int64_t getMiscErrors() const;
    void setMiscErrors(int64_t value);
        /// <summary>
    /// Cache hits
    /// </summary>
    int64_t getCacheHits() const;
    void setCacheHits(int64_t value);
        /// <summary>
    /// Retransmitted segments
    /// </summary>
    int64_t getRetransmits() const;
    void setRetransmits(int64_t value);
        /// <summary>
    /// Fast retransmitted segments
    /// </summary>
    int64_t getFastRetransmits() const;
    void setFastRetransmits(int64_t value);
    
protected:
    int64_t m_Tx_packets;

    int64_t m_Rx_packets;

    int64_t m_Forwarded_packets;

    int64_t m_Dropped_packets;

    int64_t m_Checksum_errors;

    int64_t m_Length_errors;

    int64_t m_Memory_errors;

    int64_t m_Routing_errors;

    int64_t m_Protocol_errors;

    int64_t m_Option_errors;

    int64_t m_Misc_errors;

    int64_t m_Cache_hits;

    int64_t m_Retransmits;

    int64_t m_Fast_retransmits;

};

}
}
}

#endif /* StackTcpStats_H_ */
